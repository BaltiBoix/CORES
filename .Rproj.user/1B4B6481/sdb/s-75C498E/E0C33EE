{
    "contents" : "require(dplyr, quietly = TRUE)\nrequire(utils, quietly = TRUE)\nrequire(LaF, quietly = TRUE)\nrequire(tidyr, quietly = TRUE)\nrequire(ggplot2, quietly = TRUE)\nrequire(ggfortify, quietly = TRUE)\n\n# IV. FORMAT OF \"ghcnd-stations.txt\"\n# \n# ------------------------------\n#       Variable   Columns   Type\n# ------------------------------\n# ID            1-11   Character\n# LATITUDE     13-20   Real\n# LONGITUDE    22-30   Real\n# ELEVATION    32-37   Real\n# STATE        39-40   Character\n# NAME         42-71   Character\n# GSN FLAG     73-75   Character\n# HCN/CRN FLAG 77-79   Character\n# WMO ID       81-85   Character\n# ------------------------------\n\n#download.file(\"ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/ghcnd-stations.txt\", destfile = \"stations.txt\")\n\nstations_width<-c(12, 9, 10, 7, 3, 31)\nstations_colname<-c(\"id\", \"latitude\", \"longitude\", \"elevation\", \"state\", \"name\")\n\nlaf <- laf_open_fwf(\"stations.txt\", column_widths = stations_width, \n                    column_types=rep(\"character\",6),\n                    column_names = stations_colname)\n\nstations<-laf[,]\n\nsp_stations<-filter(stations, grepl(\"SP00\", substr(stations$id,1,4)))\nsp_stations$url<-paste0(\"ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/all/\", trimws(sp_stations$id), \".dly\")\n\n# ------------------------------\n#       Variable   Columns   Type\n# ------------------------------\n# ID            1-11   Character\n# YEAR         12-15   Integer\n# MONTH        16-17   Integer\n# ELEMENT      18-21   Character\n# VALUE1       22-26   Integer\n# MFLAG1       27-27   Character\n# QFLAG1       28-28   Character\n# SFLAG1       29-29   Character\n# VALUE2       30-34   Integer\n# MFLAG2       35-35   Character\n# QFLAG2       36-36   Character\n# SFLAG2       37-37   Character\n# .           .          .\n# .           .          .\n# .           .          .\n# VALUE31    262-266   Integer\n# MFLAG31    267-267   Character\n# QFLAG31    268-268   Character\n# SFLAG31    269-269   Character\n# ------------------------------\n\ncol_width<-c(11, 4, 2, 4, rep(c(5, 1, 1, 1), 31))\n\ncol_types<-c(\"character\", \"integer\", \"integer\", \"character\", rep(c(\"integer\", \"character\", \"character\", \"character\"),31))\n\ncol_names<-c(\"id\", \"year\", \"month\", \"element\")\nfor(i in 1:31) col_names<-c(col_names, paste0(\"value\", i), paste0(\"mflag\", i), paste0(\"qflag\", i), paste0(\"sflag\", i))\n\nfor (i in 1:nrow(sp_stations)){\n      \n      #download.file(sp_stations$url[i], destfile = as.character(sp_stations$id[i]))\n      \n      laf <- laf_open_fwf(as.character(sp_stations$id[i]), column_widths = col_width, \n                          column_types=col_types,\n                          column_names = col_names)\n      \n      if(i == 1){\n            df<-laf[,]\n      }else{\n            df<-rbind(df, laf[,])\n      }     \n}\n\ndff<-select(df, 1:4, starts_with(\"value\"))\ndffg<-gather(dff, key = day, value = value, 5:35)\ndffg$value<-ifelse(dffg$value == -9999,NA,dffg$value)\ndffg$day<-as.integer(substr(dffg$day,6,7))\ndffg<-mutate(dffg, date=as.Date(paste(year,month,day), \"%Y%m%d\"))\ndffg<-arrange(dffg, id, element, date)\n\npru_gby<-group_by(dffg, id, element, month, year)\npru<-summarize(pru_gby, mval=mean(value, na.rm=TRUE ))\npru$month<-factor(pru$month)\nlevels(pru$month)<-month.name\npru$id<-factor(pru$id)\nlevels(pru$id)<-sp_stations$name\n\npruTMAX<-filter(pru, element == \"TMAX\")\npruTMIN<-filter(pru, element == \"TMIN\")\n\npdf(\"MOnthly_output.pdf\", pointsize=4)\np<-ggplot()\np<-p+geom_line(data=pruTMAX, aes(x=month, y=mval, group = interaction(year,element)), alpha=0.5, color=\"gray\")\np<-p+geom_smooth(data=pruTMAX, aes(x=month, y=mval, group=1), size=1.5, se=FALSE, color=\"red\")\np<-p+geom_line(data=pruTMIN, aes(x=month, y=mval, group = interaction(year,element)), alpha=0.5, color=\"gray\")\np<-p+geom_smooth(data=pruTMIN, aes(x=month, y=mval, group=1), size=1.5, se=FALSE, color=\"blue\")\np<-p+facet_wrap(~ id, ncol=4)\np<-p+ylab(\"Temp °C x 10\")\np<-p+ggtitle(\"MONTHLY TMAX / TMIN\")\np<-p+theme(axis.title.y=element_text(hjust = 0.5, size = 12), \n           axis.title.x=element_blank(), \n           plot.title = element_text(hjust = 0.5, size = 16),\n           axis.text.x = element_text(size=12, angle = 45, hjust = 1)) \nsuppressMessages(print(p))\ndev.off()\n\npru<-filter(dffg, element == \"TMAX\", id == sp_stations$id[1], !is.na(value), date >= \"2000-01-01\")\npru<-select(pru, date, value)\npruts<-ts(pru$value, frequency = 365, start=c(as.numeric(format(pru$date[1], \"%Y\"), 1)))\nprucomp<-decompose(pruts, type = \"additive\")\n\np<-autoplot(prucomp, ts.colour = \"blue\")\np<-p + xlab(\"Years\")\np<-p+ylab(\"Temp °C x 10\")\np<-p + ggtitle(paste(\"TMAX decomposition of station \", sp_stations$name[1]))\nprint(p)\n\npruHW<-HoltWinters(pruts)\nhist(residuals(pruHW), breaks=20, freq=TRUE)\np<-HWplot(pruHW,365)\np<-p + scale_x_date(breaks = date_breaks(\"month\"), labels = date_format(\"%b-%y\"),\n                    limits=c(as.Date(\"2014-01-01\", \"%Y-%m-%d\"), as.Date(\"2016-01-01\", \"%Y-%m-%d\")))\nprint(p)\n",
    "created" : 1448826490329.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2647652848",
    "id" : "E0C33EE",
    "lastKnownWriteTime" : 1448816968,
    "path" : "~/RProjects/ghcn/ghcn.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}